name: Create K8s Cluster Infra
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
      allowed_ssh_cidr:
        description: 'Allowed SSH CIDR range (e.g., 203.0.113.0/32)'
        required: true
        default: ''
        type: string
      subnet_id:
        description: 'Subnet ID for the EC2 instances'
        required: true
        default: 'subnet-0d56123f10a2fd3de' 
        type: string
      aws_region:
        description: 'AWS Region for the resources'
        required: true
        default: 'us-east-1'
        type: string
      
#   push:
#     branches:
#       - main
jobs:
  create-cluster-infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/AWS/ec2-k8s-cluster
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${ github.event.inputs.aws_region }
      TF_VAR_instance_type: t3.medium
      TF_VAR_aws_region: ${ github.event.inputs.aws_region }
      TF_VAR_key_name: k8s_deployer_key
      TF_VAR_public_key_path: ~/.ssh/id_ed25519.pub
      TF_VAR_allowed_ssh_cidr: ${{ github.event.inputs.allowed_ssh_cidr }}
      TF_VAR_subnet_id: ${{ github.event.inputs.subnet_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Write public key to file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PUBLIC_KEY_MACAIR }}" > ~/.ssh/id_ed25519.pub

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Terraform Plan or Apply
        run: |
          if [ "${{ github.event.inputs.action }}" = "apply" ]; then
            terraform apply -auto-approve
          else
            terraform plan
          fi


